<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NetMonitor</title>
</head>

{{!-- Importação do Jquery --}}
<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
    crossorigin="anonymous"></script>

{{!-- Importação do Bootstrap --}}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>

{{!-- Importação do boxicons --}}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">

{{!-- Importação do Handlebars --}}
<script src="https://cdn.jsdelivr.net/npm/handlebars@4.7.7/dist/handlebars.min.js"></script>

<!-- Importando o cliente do Socket.IO -->
<script src="http://localhost:9090/socket.io/socket.io.js"></script>

{{!-- Chart.js --}}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

{{!-- Adapter de data para Chart.js --}}
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>

<body id="body-pd">

    <style>
        @import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap");

        :root {
            --header-height: 3rem;
            --nav-width: 68px;
            --first-color: #4723D9;
            --first-color-light: #AFA5D9;
            --white-color: #F7F6FB;
            --body-font: 'Nunito', sans-serif;
            --normal-font-size: 1rem;
            --z-fixed: 100
        }

        *,
        ::before,
        ::after {
            box-sizing: border-box
        }

        body {
            position: relative;
            margin: var(--header-height) 0 0 0;
            padding: 0 1rem;
            font-family: var(--body-font);
            font-size: var(--normal-font-size);
            transition: .5s
        }

        a {
            text-decoration: none
        }

        .header {
            width: 100%;
            height: var(--header-height);
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            background-color: var(--white-color);
            z-index: var(--z-fixed);
            transition: .5s
        }

        .header_toggle {
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer
        }

        .header_img {
            width: 35px;
            height: 35px;
            display: flex;
            justify-content: center;
            border-radius: 50%;
            overflow: hidden
        }

        .header_img img {
            width: 40px
        }

        .l-navbar {
            position: fixed;
            top: 0;
            left: -30%;
            width: var(--nav-width);
            height: 100vh;
            background-color: var(--first-color);
            padding: .5rem 1rem 0 0;
            transition: .5s;
            z-index: var(--z-fixed)
        }

        .nav {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden
        }

        .nav_logo,
        .nav_link {
            display: grid;
            grid-template-columns: max-content max-content;
            align-items: center;
            column-gap: 1rem;
            padding: .5rem 0 .5rem 1.5rem;
        }

        .nav_logo {
            margin-bottom: 2rem;
            margin-left: -0.4rem;
        }

        .nav_logo-icon {
            font-size: 1.25rem;
            color: var(--white-color)
        }

        .nav_logo-name {
            color: var(--white-color);
            font-weight: 700
        }

        .nav_link {
            position: relative;
            color: var(--first-color-light);
            margin-bottom: 1.5rem;
            transition: .3s
        }

        .nav_link:hover {
            color: var(--white-color)
        }

        .nav_icon {
            font-size: 1.25rem
        }

        .show {
            left: 0
        }

        .body-pd {
            padding-left: calc(var(--nav-width) + 1rem)
        }

        .active {
            color: var(--white-color)
        }

        .active::before {
            content: '';
            position: absolute;
            left: 0;
            width: 2px;
            height: 32px;
            background-color: var(--white-color)
        }

        .height-100 {
            height: 100vh
        }

        .form-control:focus {
            color: #495057;
            border-color: #4723D9;
            outline: 0;
            box-shadow: none;
        }

        @media screen and (min-width: 768px) {
            body {
                margin: calc(var(--header-height) + 1rem) 0 0 0;
                padding-left: calc(var(--nav-width) + 2rem)
            }

            .header {
                height: calc(var(--header-height) + 1rem);
                padding: 0 2rem 0 calc(var(--nav-width) + 2rem)
            }

            .header_img {
                width: 40px;
                height: 40px
            }

            .header_img img {
                width: 45px
            }

            .l-navbar {
                left: 0;
                padding: 1rem 1rem 0 0
            }

            .show {
                width: calc(var(--nav-width) + 166px)
            }

            .body-pd {
                padding-left: calc(var(--nav-width) + 198px)
            }
        }
    </style>

    <header class="header" id="header">
        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
        <div class="header_img"> <img src="https://i.imgur.com/hczKIze.jpg" alt=""> </div>
    </header>

    <div class="l-navbar" id="nav-bar">
        <nav class="nav"> 
            <div>
                <div href="#" class="nav_logo">
                    <i class='bx bx-desktop' style="font-size: 32px; text-decoration: none; color: #F7F6FB;"></i> 
                    <span class="nav_logo-name">NetMonitor</span> 
                </div>

                <div class="nav_list"> 
                    <a href="#" class="nav_link active" data-view="dash"> 
                        <i class='bx bxs-dashboard' style="font-size: 24px; text-decoration: none; color: #F7F6FB;"></i>
                        <span class="nav_name">Dashboard</span> 
                    </a> 
                    <a href="#" class="nav_link" id="routerMenu" data-view="router"> 
                        <i class='bx bx-network-chart' style="font-size: 24px; text-decoration: none; color: #F7F6FB;"></i> 
                        <span class="nav_name">Roteadores (NAS)</span> 
                    </a> 
                    <a href="#" class="nav_link" data-view="transmissor"> 
                        <i class='bx bxs-cabinet' style="font-size: 24px; text-decoration: none; color: #F7F6FB;"></i>
                        <span class="nav_name">Transmissores (OLT)</span> 
                    </a> 
                    <a href="#" class="nav_link" data-view="switch"> 
                        <i class='bx bx-ruler' style="font-size: 24px; text-decoration: none; color: #F7F6FB;"></i>
                        <span class="nav_name">Switches</span> 
                    </a> 
                    <a href="#" class="nav_link" data-view="testeSNMP"> 
                        <i class='bx bx-folder nav_icon'></i> 
                        <span class="nav_name">Files</span> 
                    </a>
                    <a href="#" class="nav_link"> 
                        <i class='bx bx-bar-chart-alt-2 nav_icon'></i> 
                        <span class="nav_name">Stats</span> 
                    </a> 
                </div>
            </div> 
            <a href="#" class="nav_link"> 
                <i class='bx bx-log-out nav_icon'></i> 
                <span class="nav_name">SignOut</span> 
            </a>
        </nav>
    </div>
    <div class="height-100 bg-light" id="content-container" style="padding: 20px; border-radius: 15px;">
        <h4>Main Components</h4>
    </div>
</body>

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function (event) {

        const showNavbar = (toggleId, navId, bodyId, headerId) => {
            const toggle = document.getElementById(toggleId),
                nav = document.getElementById(navId),
                bodypd = document.getElementById(bodyId),
                headerpd = document.getElementById(headerId)

            // Validate that all variables exist
            if (toggle && nav && bodypd && headerpd) {
                toggle.addEventListener('click', () => {
                    // show navbar
                    nav.classList.toggle('show')
                    // change icon
                    toggle.classList.toggle('bx-x')
                    // add padding to body
                    bodypd.classList.toggle('body-pd')
                    // add padding to header
                    headerpd.classList.toggle('body-pd')
                })
            }
        }

        showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header')

        const linkColor = document.querySelectorAll('.nav_link')

        function colorLink() {
            if (linkColor) {
                linkColor.forEach(l => l.classList.remove('active'))
                this.classList.add('active')
            }
        }
        linkColor.forEach(l => l.addEventListener('click', colorLink))
    });

    function loadContent(view) {
        const container = document.getElementById('content-container');
        const url = `/views/${view}`;  // A URL que vai retornar o conteúdo renderizado

        // Faz a requisição para carregar a view
        return fetch(url)
            .then(response => response.text())  // Espera a resposta como HTML
            .then(html => {
                container.innerHTML = html;
            })
            .catch(error => {
                console.error('Erro ao carregar a view:', error);
            });
    }

    function loadScript(scriptPath) {
        return new Promise((resolve, reject) => {
            // Verifica se o script já está carregado
            const existingScript = document.querySelector(`script[src="${scriptPath}"]`);

            // Se já estiver carregado, remova-o
            if (existingScript) {
                existingScript.remove();
            }

            const script = document.createElement('script');
            script.src = scriptPath;
            script.type = 'text/javascript';
            script.onload = resolve;  // Resolve a promessa quando o script é carregado
            script.onerror = reject; // Rejeita a promessa se houver erro no carregamento
            document.body.appendChild(script);
        });
    }

    document.querySelectorAll('.nav_link').forEach(link => {
        link.addEventListener('click', function (e) {
            e.preventDefault();
            
            const view = this.getAttribute('data-view');  // Pega o nome da view para carregar
            loadContent(view).then(async () => {
                if (view == 'router') {
                    await loadScript('/js/routerDOM.js');
                    console.log('Script routerDOM.js carregado');
                } else if (view == 'transmissor') {
                    await loadScript('/js/transmissorDOM.js');
                    console.log('Script transmissorDOM.js carregado');
                } else if (view == 'switch') {
                    await loadScript('/js/switchDOM.js');
                    console.log('Script switchDOM.js carregado');
                } else if (view == 'testeSNMP') {
                    await loadScript('/js/testeSNMP.js');
                    console.log('Teste js carregado');
                }
            });
            
        });
    });
    
</script>

</html>